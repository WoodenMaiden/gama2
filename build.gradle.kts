/*
 * This file was generated by the Gradle 'init' task.
 */

buildscript {
    repositories {
        // make it easy to test a snapshot version of goomph
        maven {	url = uri("https://oss.sonatype.org/content/repositories/snapshots/") }
        // grab dependencies from the gradle plugin portal
        maven { url = uri("https://plugins.gradle.org/m2/") }

        mavenCentral()
        mavenLocal()
        gradlePluginPortal()
    }
    dependencies { // we have to import plugins legacy way to use them in the subprojects block
        // a bunch of eclipse stuff
        classpath("com.diffplug.gradle:goomph:3.42.2")
        // creates a target platform
        classpath("org.standardout:bnd-platform:1.7.0")
    }
}

plugins {
    `java-library`
    `maven-publish`
    id("org.standardout.bnd-platform") version "1.7.0"
    id("org.standardout.include") version "0.2.0" // pour inclure les modules comme des bundles OGSI
}

include {
    listOf(
        ":gama.kernel:gama.annotations",
        ":gama.build:gama.processor",
        ":gama.kernel:gama.dev",
        ":gama.kernel:gama.dependencies",
        ":gama.kernel:gama.core"
    ).map{ project(it) }
}

platform { // to configure bnd-platform
    determineImportVersions = true
    useBndHashQualifiers = false
    fetchSources = false

    // https://github.com/stempler/bnd-platform-sample/blob/master/build.gradle#L71
    auxVersionedSymbolicNames = false

}

configurations.forEach {// for each dependency we make the bundle task depend on the jar task
    it.allDependencies.filterIsInstance<ProjectDependency>().forEach { ti ->
        tasks.bundles {
            dependsOn("${ti.dependencyProject.path}:jar")
        }
    }
}

tasks.named("bundles") {
    dependsOn(tasks.clean)

    group = "Build"
    description = "Converts maven dependencies into OSGi bundles."
}

tasks.withType<JavaCompile> {
    options.encoding = "UTF-8"
}

// Defines configuration which will be applied to all submodules
// It is possible to override a block defined below by just
// redefining it in the submodule's gradle.build.kts, just like
// gama.build:gama.processor's `sourceSets`
subprojects {
    apply(plugin = "java") // can't use id() in subproject block se we do it legacy style
    apply(plugin = "maven-publish")
    apply(plugin = "com.diffplug.eclipse.excludebuildfolder")
    apply(plugin = "com.diffplug.eclipse.projectdeps")
    apply(plugin = "org.standardout.bnd-platform")


    java.sourceCompatibility = JavaVersion.VERSION_17
    version = "2.0.0-SNAPSHOT"

    tasks.withType<JavaCompile> {
        options.encoding = "UTF-8"
    }

    tasks.withType<Javadoc> {
        options.encoding = "UTF-8"
    }

    // the maven publish part isn't here because of name conflicts
    // got too lazy to deal with it. As long as it works ¯\_(ツ)_/¯

    sourceSets {
        main {
            java {
                srcDirs("src")
            }
        }
    }
}
